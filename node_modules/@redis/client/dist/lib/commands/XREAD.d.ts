import { RedisArgument } from '../RESP/types';
export interface XReadStream {
    key: RedisArgument;
    id: RedisArgument;
}
export type XReadStreams = Array<XReadStream> | XReadStream;
export declare function pushXReadStreams(args: Array<RedisArgument>, streams: XReadStreams): void;
export interface XReadOptions {
    COUNT?: number;
    BLOCK?: number;
}
declare const _default: {
    readonly FIRST_KEY_INDEX: (this: void, streams: XReadStreams) => RedisArgument;
    readonly IS_READ_ONLY: true;
    readonly transformArguments: (this: void, streams: XReadStreams, options?: XReadOptions) => RedisArgument[];
    readonly transformReply: () => unknown;
};
export default _default;
