import { RedisArgument } from '../RESP/types';
declare const _default: {
    readonly FIRST_KEY_INDEX: 1;
    readonly IS_READ_ONLY: false;
    readonly transformArguments: (this: void, key: RedisArgument) => RedisArgument[];
    readonly transformReply: {
        readonly 2: (reply: import("../RESP/types").UnwrapReply<import("../RESP/types").TuplesReply<[] | [import("../RESP/types").BlobStringReply<string>, import("../RESP/types").BlobStringReply<string>]>>) => {
            value: import("../RESP/types").BlobStringReply<string>;
            score: number;
        } | null;
        readonly 3: (reply: import("../RESP/types").UnwrapReply<import("../RESP/types").TuplesReply<[] | [import("../RESP/types").BlobStringReply<string>, import("../RESP/types").DoubleReply<number>]>>) => {
            value: import("../RESP/types").BlobStringReply<string>;
            score: import("../RESP/types").DoubleReply<number>;
        } | null;
    };
};
export default _default;
