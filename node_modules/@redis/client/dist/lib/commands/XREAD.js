"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pushXReadStreams = void 0;
function pushXReadStreams(args, streams) {
    args.push('STREAMS');
    if (Array.isArray(streams)) {
        const keysStart = args.length, idsStart = keysStart + streams.length;
        for (let i = 0; i < streams.length; i++) {
            const stream = streams[i];
            args[keysStart + i] = stream.key;
            args[idsStart + i] = stream.id;
        }
    }
    else {
        args.push(streams.key, streams.id);
    }
}
exports.pushXReadStreams = pushXReadStreams;
exports.default = {
    FIRST_KEY_INDEX(streams) {
        return Array.isArray(streams) ? streams[0].key : streams.key;
    },
    IS_READ_ONLY: true,
    transformArguments(streams, options) {
        const args = ['XREAD'];
        if (options?.COUNT) {
            args.push('COUNT', options.COUNT.toString());
        }
        if (options?.BLOCK !== undefined) {
            args.push('BLOCK', options.BLOCK.toString());
        }
        pushXReadStreams(args, streams);
        return args;
    },
    // export { transformStreamsMessagesReply as transformReply } from './generic-transformers';
    // TODO
    transformReply: undefined
};
