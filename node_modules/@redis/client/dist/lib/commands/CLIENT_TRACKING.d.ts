import { RedisArgument, SimpleStringReply } from '../RESP/types';
import { RedisVariadicArgument } from './generic-transformers';
interface CommonOptions {
    REDIRECT?: number;
    NOLOOP?: boolean;
}
interface BroadcastOptions {
    BCAST?: boolean;
    PREFIX?: RedisVariadicArgument;
}
interface OptInOptions {
    OPTIN?: boolean;
}
interface OptOutOptions {
    OPTOUT?: boolean;
}
export type ClientTrackingOptions = CommonOptions & (BroadcastOptions | OptInOptions | OptOutOptions);
declare const _default: {
    readonly FIRST_KEY_INDEX: undefined;
    readonly IS_READ_ONLY: true;
    readonly transformArguments: <M extends boolean>(mode: M, options?: (M extends true ? ClientTrackingOptions : never) | undefined) => RedisArgument[];
    readonly transformReply: () => SimpleStringReply<'OK'>;
};
export default _default;
