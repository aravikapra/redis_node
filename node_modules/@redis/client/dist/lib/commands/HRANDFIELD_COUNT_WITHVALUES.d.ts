import { RedisArgument, ArrayReply, TuplesReply, BlobStringReply, UnwrapReply } from '../RESP/types';
export type HRandFieldCountWithValuesReply = Array<{
    field: BlobStringReply;
    value: BlobStringReply;
}>;
declare const _default: {
    readonly FIRST_KEY_INDEX: 1;
    readonly IS_READ_ONLY: true;
    readonly transformArguments: (this: void, key: RedisArgument, count: number) => RedisArgument[];
    readonly transformReply: {
        readonly 2: (rawReply: UnwrapReply<ArrayReply<BlobStringReply>>) => HRandFieldCountWithValuesReply;
        readonly 3: (reply: UnwrapReply<ArrayReply<TuplesReply<[BlobStringReply, BlobStringReply]>>>) => {
            field: BlobStringReply<string>;
            value: BlobStringReply<string>;
        }[];
    };
};
export default _default;
