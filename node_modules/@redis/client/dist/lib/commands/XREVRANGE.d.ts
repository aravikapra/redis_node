export interface XRevRangeOptions {
    COUNT?: number;
}
declare const _default: {
    readonly FIRST_KEY_INDEX: 1;
    readonly IS_READ_ONLY: true;
    readonly transformArguments: (key: import("../RESP/types").RedisArgument, start: import("../RESP/types").RedisArgument, end: import("../RESP/types").RedisArgument, options?: import("./XRANGE").XRangeOptions | undefined) => import("../RESP/types").RedisArgument[];
    readonly transformReply: (this: void, reply: import("./generic-transformers").StreamMessageReply[]) => {
        id: import("../RESP/types").BlobStringReply<string>;
        message: Record<string, import("../RESP/types").BlobStringReply<string>>;
    }[];
};
export default _default;
