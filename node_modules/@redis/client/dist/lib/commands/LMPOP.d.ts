import { CommandArguments, NullReply, TuplesReply, BlobStringReply } from '../RESP/types';
import { ListSide, RedisVariadicArgument } from './generic-transformers';
export interface LMPopOptions {
    COUNT?: number;
}
export declare function transformLMPopArguments(args: CommandArguments, keys: RedisVariadicArgument, side: ListSide, options?: LMPopOptions): CommandArguments;
export type LMPopArguments = typeof transformLMPopArguments extends (_: any, ...args: infer T) => any ? T : never;
declare const _default: {
    readonly FIRST_KEY_INDEX: 2;
    readonly IS_READ_ONLY: false;
    readonly transformArguments: (this: void, keys: RedisVariadicArgument, side: ListSide, options?: LMPopOptions | undefined) => CommandArguments;
    readonly transformReply: () => NullReply | TuplesReply<[
        key: BlobStringReply,
        elements: Array<BlobStringReply>
    ]>;
};
export default _default;
