import { RedisArgument, CommandArguments } from '../RESP/types';
import { GeoSearchOptions, GeoUnits } from './GEOSEARCH';
import { GeoReplyWith } from './GEOSEARCH_WITH';
export declare function transformGeoRadiusByMemberWithArguments(command: RedisArgument, key: RedisArgument, from: RedisArgument, radius: number, unit: GeoUnits, replyWith: Array<GeoReplyWith>, options?: GeoSearchOptions): CommandArguments;
declare const _default: {
    readonly FIRST_KEY_INDEX: 1;
    readonly IS_READ_ONLY: false;
    readonly transformArguments: (key: RedisArgument, from: RedisArgument, radius: number, unit: GeoUnits, replyWith: GeoReplyWith[], options?: GeoSearchOptions | undefined) => CommandArguments;
    readonly transformReply: (this: void, reply: import("../RESP/types").TuplesReply<[import("../RESP/types").BlobStringReply<string>, ...any[]]>[], replyWith: GeoReplyWith[]) => import("./GEOSEARCH_WITH").GeoReplyWithMember[];
};
export default _default;
