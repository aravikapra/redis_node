declare const _default: {
    readonly FIRST_KEY_INDEX: 1;
    readonly IS_READ_ONLY: false;
    readonly transformArguments: (this: void, key: import("./generic-transformers").RedisVariadicArgument, timeout: number) => import("../RESP/types").CommandArguments;
    readonly transformReply: {
        readonly 2: (this: void, reply: import("../RESP/types").UnwrapReply<import("../RESP/types").NullReply | import("../RESP/types").TuplesReply<[import("../RESP/types").BlobStringReply<string>, import("../RESP/types").BlobStringReply<string>, import("../RESP/types").BlobStringReply<string>]>>) => {
            key: import("../RESP/types").BlobStringReply<string>;
            value: import("../RESP/types").BlobStringReply<string>;
            score: number;
        } | null;
        readonly 3: (this: void, reply: import("../RESP/types").UnwrapReply<import("../RESP/types").NullReply | import("../RESP/types").TuplesReply<[import("../RESP/types").BlobStringReply<string>, import("../RESP/types").BlobStringReply<string>, import("../RESP/types").DoubleReply<number>]>>) => {
            key: import("../RESP/types").BlobStringReply<string>;
            value: import("../RESP/types").BlobStringReply<string>;
            score: import("../RESP/types").DoubleReply<number>;
        } | null;
    };
};
export default _default;
