import { RedisArgument, ArrayReply, UnwrapReply } from '../RESP/types';
import { StreamMessageReply } from './generic-transformers';
export interface XRangeOptions {
    COUNT?: number;
}
export declare function transformXRangeArguments(command: RedisArgument, key: RedisArgument, start: RedisArgument, end: RedisArgument, options?: XRangeOptions): RedisArgument[];
declare const _default: {
    readonly FIRST_KEY_INDEX: 1;
    readonly IS_READ_ONLY: true;
    readonly transformArguments: (key: RedisArgument, start: RedisArgument, end: RedisArgument, options?: XRangeOptions | undefined) => RedisArgument[];
    readonly transformReply: (this: void, reply: UnwrapReply<ArrayReply<StreamMessageReply>>) => {
        id: import("../RESP/types").BlobStringReply<string>;
        message: Record<string, import("../RESP/types").BlobStringReply<string>>;
    }[];
};
export default _default;
