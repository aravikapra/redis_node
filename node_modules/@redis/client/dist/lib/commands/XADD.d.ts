import { RedisArgument, BlobStringReply, CommandArguments } from '../RESP/types';
export interface XAddOptions {
    TRIM?: {
        strategy?: 'MAXLEN' | 'MINID';
        strategyModifier?: '=' | '~';
        threshold: number;
        limit?: number;
    };
}
export declare function pushXAddArguments(args: CommandArguments, id: RedisArgument, message: Record<string, RedisArgument>, options?: XAddOptions): CommandArguments;
declare const _default: {
    readonly FIRST_KEY_INDEX: 1;
    readonly IS_READ_ONLY: false;
    readonly transformArguments: (this: void, key: RedisArgument, id: RedisArgument, message: Record<string, RedisArgument>, options?: XAddOptions) => CommandArguments;
    readonly transformReply: () => BlobStringReply;
};
export default _default;
