import { RedisArgument, ArrayReply, BlobStringReply } from '../RESP/types';
export interface SortOptions {
    BY?: RedisArgument;
    LIMIT?: {
        offset: number;
        count: number;
    };
    GET?: RedisArgument | Array<RedisArgument>;
    DIRECTION?: 'ASC' | 'DESC';
    ALPHA?: boolean;
}
export declare function transformSortArguments(command: RedisArgument, key: RedisArgument, options?: SortOptions): RedisArgument[];
declare const _default: {
    readonly FIRST_KEY_INDEX: 1;
    readonly IS_READ_ONLY: true;
    readonly transformArguments: (key: RedisArgument, options?: SortOptions | undefined) => RedisArgument[];
    readonly transformReply: () => ArrayReply<BlobStringReply>;
};
export default _default;
