"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformZMPopArguments = void 0;
const generic_transformers_1 = require("./generic-transformers");
function transformZMPopArguments(args, keys, side, options) {
    args = (0, generic_transformers_1.pushVariadicArgument)(args, keys);
    args.push(side);
    if (options?.COUNT) {
        args.push('COUNT', options.COUNT.toString());
    }
    return args;
}
exports.transformZMPopArguments = transformZMPopArguments;
exports.default = {
    FIRST_KEY_INDEX: 2,
    IS_READ_ONLY: false,
    transformArguments(...args) {
        return transformZMPopArguments(['ZMPOP'], ...args);
    },
    transformReply: {
        2(reply) {
            return reply === null ? null : {
                key: reply[0],
                members: reply[1].map(member => {
                    const [value, score] = member;
                    return {
                        value,
                        score: generic_transformers_1.transformDoubleReply[2](score)
                    };
                })
            };
        },
        3(reply) {
            return reply === null ? null : {
                key: reply[0],
                members: generic_transformers_1.transformSortedSetReply[3](reply[1])
            };
        }
    }
};
