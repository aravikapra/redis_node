"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pushXAddArguments = void 0;
function pushXAddArguments(args, id, message, options) {
    if (options?.TRIM) {
        if (options.TRIM.strategy) {
            args.push(options.TRIM.strategy);
        }
        if (options.TRIM.strategyModifier) {
            args.push(options.TRIM.strategyModifier);
        }
        args.push(options.TRIM.threshold.toString());
        if (options.TRIM.limit) {
            args.push('LIMIT', options.TRIM.limit.toString());
        }
    }
    args.push(id);
    for (const [key, value] of Object.entries(message)) {
        args.push(key, value);
    }
    return args;
}
exports.pushXAddArguments = pushXAddArguments;
exports.default = {
    FIRST_KEY_INDEX: 1,
    IS_READ_ONLY: false,
    transformArguments(key, id, message, options) {
        return pushXAddArguments(['XADD', key], id, message, options);
    },
    transformReply: undefined
};
