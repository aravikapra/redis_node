"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    FIRST_KEY_INDEX: undefined,
    IS_READ_ONLY: true,
    transformArguments(index, query, options) {
        const args = ['FT.SPELLCHECK', index, query];
        if (options?.DISTANCE) {
            args.push('DISTANCE', options.DISTANCE.toString());
        }
        if (options?.TERMS) {
            if (Array.isArray(options.TERMS)) {
                for (const term of options.TERMS) {
                    pushTerms(args, term);
                }
            }
            else {
                pushTerms(args, options.TERMS);
            }
        }
        if (options?.DIALECT) {
            args.push('DIALECT', options.DIALECT.toString());
        }
        return args;
    },
    // TODO
    // type SpellCheckRawReply = Array<[
    //   _: string,
    //   term: string,
    //   suggestions: Array<[score: string, suggestion: string]>
    // ]>;
    // type SpellCheckReply = Array<{
    //   term: string,
    //   suggestions: Array<{
    //     score: number,
    //     suggestion: string
    //   }>
    // }>;
    // export function transformReply(rawReply: SpellCheckRawReply): SpellCheckReply {
    //   return rawReply.map(([, term, suggestions]) => ({
    //     term,
    //     suggestions: suggestions.map(([score, suggestion]) => ({
    //       score: Number(score),
    //       suggestion
    //     }))
    //   }));
    // }
    transformReply: undefined
};
function pushTerms(args, { mode, dictionary }) {
    args.push('TERMS', mode, dictionary);
}
