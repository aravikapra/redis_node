import { NullReply, ArrayReply, BlobStringReply, DoubleReply, UnwrapReply } from '@redis/client/dist/lib/RESP/types';
declare const _default: {
    readonly FIRST_KEY_INDEX: undefined;
    readonly IS_READ_ONLY: true;
    readonly transformArguments: (this: void, key: import("@redis/client/dist/lib/RESP/types").RedisArgument, prefix: import("@redis/client/dist/lib/RESP/types").RedisArgument, options?: import("./SUGGET").FtSugGetOptions | undefined) => import("@redis/client/dist/lib/RESP/types").RedisArgument[];
    readonly transformReply: {
        readonly 2: (this: void, reply: NullReply | UnwrapReply<ArrayReply<BlobStringReply>>) => {
            suggestion: BlobStringReply;
            score: number;
        }[] | null;
        readonly 3: (this: void, reply: UnwrapReply<ArrayReply<BlobStringReply | DoubleReply>>) => {
            suggestion: BlobStringReply;
            score: DoubleReply;
        }[] | null;
    };
};
export default _default;
