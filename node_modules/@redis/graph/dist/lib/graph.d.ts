import { RedisClientType } from '@redis/client';
import { RedisArgument, RedisFunctions, RedisScripts } from '@redis/client/dist/lib/RESP/types';
import QUERY, { QueryOptions } from './commands/QUERY';
type GraphReply<T> = {
    data?: Array<T>;
};
type GraphClientType = RedisClientType<{
    graph: {
        query: typeof QUERY;
        roQuery: typeof import('./commands/RO_QUERY.js').default;
    };
}, RedisFunctions, RedisScripts>;
export default class Graph {
    #private;
    constructor(client: GraphClientType, name: string);
    query<T>(query: RedisArgument, options?: QueryOptions): Promise<GraphReply<T>>;
    roQuery<T>(query: RedisArgument, options?: QueryOptions): Promise<GraphReply<T>>;
}
export {};
